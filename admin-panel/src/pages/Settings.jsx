import React, { useState, useEffect } from 'react';
import API from '../api';

const API_URL = process.env.REACT_APP_API_URL;

export default function Settings() {
  const [loading, setLoading] = useState(true);
  const [saving, setSaving] = useState(false);
  const [settings, setSettings] = useState({
    shop_open: true,
    orders_enabled: true,
    shop_closed_custom_message: '',
    shop_closed_message: "üõ† –ú–∞–≥–∞–∑–∏–Ω –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.",
    orders_disabled_message: "‚ùóÔ∏è–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∑–∞–∫–∞–∑—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.",
    x_costumes_enabled: true,
    cars_enabled: true
  });

  const token = localStorage.getItem("admin-token");

  useEffect(() => {
    fetchSettings();
  }, []);

  const fetchSettings = async () => {
    try {
      const res = await API.get(`${API_URL}/admin/settings/shop-status`, {
        headers: { Authorization: `Bearer ${token}` }
      });
      setSettings(res.data);
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:", err);
    } finally {
      setLoading(false);
    }
  };

  const updateSettings = async (newSettings) => {
    setSaving(true);
    try {
      await API.post(`${API_URL}/admin/settings/shop-status`, newSettings, {
        headers: { Authorization: `Bearer ${token}` }
      });
      setSettings(newSettings);
      alert("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã");
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:", err);
      alert("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏");
    } finally {
      setSaving(false);
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen p-6 bg-gradient-to-br from-blue-50 via-white to-pink-50">
        <p className="text-center text-lg text-blue-700 animate-pulse">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      </div>
    );
  }

  return (
    <div className="min-h-screen p-6 bg-gradient-to-br from-blue-50 via-white to-pink-50">
      <h2 className="text-4xl font-extrabold mb-8 text-center text-blue-900 drop-shadow">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞</h2>

      <div className="max-w-2xl mx-auto bg-white rounded-2xl shadow-xl p-6">
        <div className="space-y-6">
          {/* Shop Status */}
          <div className="flex items-center justify-between p-4 bg-gray-50 rounded-xl">
            <div>
              <h3 className="text-lg font-semibold text-gray-800">–°—Ç–∞—Ç—É—Å –º–∞–≥–∞–∑–∏–Ω–∞</h3>
              <p className="text-sm text-gray-600">–í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å –≤–µ—Å—å –º–∞–≥–∞–∑–∏–Ω</p>
            </div>
            <label className="relative inline-flex items-center cursor-pointer">
              <input
                type="checkbox"
                className="sr-only peer"
                checked={settings.shop_open}
                onChange={(e) => updateSettings({ ...settings, shop_open: e.target.checked })}
                disabled={saving}
              />
              <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
            </label>
          </div>

          {/* X-Costumes Status */}
          <div className="flex items-center justify-between p-4 bg-gray-50 rounded-xl">
            <div>
              <h3 className="text-lg font-semibold text-gray-800">X-–∫–æ—Å—Ç—é–º—ã</h3>
              <p className="text-sm text-gray-600">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–ª–∏ —Å–∫—Ä—ã—Ç—å X-–∫–æ—Å—Ç—é–º—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ</p>
            </div>
            <label className="relative inline-flex items-center cursor-pointer">
              <input
                type="checkbox"
                className="sr-only peer"
                checked={settings.x_costumes_enabled}
                onChange={(e) => updateSettings({ ...settings, x_costumes_enabled: e.target.checked })}
                disabled={saving}
              />
              <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
            </label>
          </div>

          {/* Cars Status */}
          <div className="flex items-center justify-between p-4 bg-gray-50 rounded-xl">
            <div>
              <h3 className="text-lg font-semibold text-gray-800">–ú–∞—à–∏–Ω—ã</h3>
              <p className="text-sm text-gray-600">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–ª–∏ —Å–∫—Ä—ã—Ç—å –º–∞—à–∏–Ω—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ</p>
            </div>
            <label className="relative inline-flex items-center cursor-pointer">
              <input
                type="checkbox"
                className="sr-only peer"
                checked={settings.cars_enabled}
                onChange={(e) => updateSettings({ ...settings, cars_enabled: e.target.checked })}
                disabled={saving}
              />
              <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
            </label>
          </div>

          {/* Custom Closed Message */}
          {!settings.shop_open && (
            <div className="space-y-4">
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º)
              </label>
              <textarea
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                rows="3"
                value={settings.shop_closed_custom_message || ''}
                onChange={(e) => setSettings({ ...settings, shop_closed_custom_message: e.target.value })}
                disabled={saving}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–∞–≥–∞–∑–∏–Ω –∑–∞–∫—Ä—ã—Ç –Ω–∞ —Ç–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –¥–æ 18:00 –∏–ª–∏ –ø–æ –¥—Ä—É–≥–æ–π –ø—Ä–∏—á–∏–Ω–µ..."
              />
              <div className="text-xs text-gray-500">
                –ï—Å–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–ª–µ –ø—É—Å—Ç—ã–º, –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: <br />
                <span className="italic">{settings.shop_closed_message}</span>
              </div>
            </div>
          )}

          {/* Orders Status */}
          <div className="flex items-center justify-between p-4 bg-gray-50 rounded-xl">
            <div>
              <h3 className="text-lg font-semibold text-gray-800">–ü—Ä–∏–µ–º –∑–∞–∫–∞–∑–æ–≤</h3>
              <p className="text-sm text-gray-600">–†–∞–∑—Ä–µ—à–∏—Ç—å –∏–ª–∏ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤</p>
            </div>
            <label className="relative inline-flex items-center cursor-pointer">
              <input
                type="checkbox"
                className="sr-only peer"
                checked={settings.orders_enabled}
                onChange={(e) => updateSettings({ ...settings, orders_enabled: e.target.checked })}
                disabled={saving}
              />
              <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
            </label>
          </div>

          {/* Messages */}
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞—Ö
              </label>
              <textarea
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                rows="2"
                value={settings.orders_disabled_message}
                onChange={(e) => setSettings({ ...settings, orders_disabled_message: e.target.value })}
                disabled={saving}
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —É–≤–∏–¥—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞—Ö"
              />
            </div>
          </div>

          {/* Save Button */}
          <button
            onClick={() => updateSettings(settings)}
            className={`w-full py-3 px-4 rounded-lg font-semibold text-white transition
              ${saving 
                ? 'bg-gray-400 cursor-not-allowed' 
                : 'bg-blue-600 hover:bg-blue-700'
              }`}
          >
            {saving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}
          </button>
        </div>
      </div>
    </div>
  );
}

